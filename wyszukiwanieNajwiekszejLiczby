#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <fstream>

// Funkcja porównująca dwa elementy
bool porownaj(const std::string &a, const std::string &b) {
    return a + b > b + a;
}

// Funkcja tworzenia największej liczby
std::string tworzNajwiekszaLiczba(std::vector<int> &liczby) {
    std::vector<std::string> liczby_str;
    
    // Przekształcenie liczb na ciągi znaków
    for (int liczba : liczby) {
        liczby_str.push_back(std::to_string(liczba));
    }

    // Posortowanie liczb
    std::sort(liczby_str.begin(), liczby_str.end(), porownaj);

    // Połączenie liczb w jeden ciąg
    std::string wynik = "";
    for (const std::string &liczba : liczby_str) {
        wynik += liczba;
    }

    // Usunięcie wiodących zer
    if (wynik[0] == '0') {
        return "0";
    }

    return wynik;
}

// Funkcja do odczytu danych z pliku
void odczytajDane(const std::string &nazwa_pliku, std::vector<int> &liczby) {
    std::ifstream plik(nazwa_pliku);
    if (!plik) {
        std::cerr << "Błąd otwarcia pliku wejściowego!" << std::endl;
        return;
    }

    int liczba;
    while (plik >> liczba) {
        liczby.push_back(liczba);
    }

    plik.close();
}

// Funkcja do zapisu wyników do pliku
void zapiszWynik(const std::string &nazwa_pliku, const std::string &wynik) {
    std::ofstream plik(nazwa_pliku);
    if (!plik) {
        std::cerr << "Błąd otwarcia pliku wyjściowego!" << std::endl;
        return;
    }

    plik << wynik;
    plik.close();
}

int main() {
    // Odczyt danych z pliku
    std::vector<int> liczby;
    odczytajDane("input.txt", liczby);
    if (liczby.empty()) {
        std::cerr << "Brak danych do przetworzenia." << std::endl;
        return 1;
    }

    // Tworzenie największej liczby
    std::string wynik = tworzNajwiekszaLiczba(liczby);
    std::cout << "Najwieksza liczba: " << wynik << std::endl;

    // Zapis wyniku do pliku
    zapiszWynik("output.txt", wynik);

    return 0;
}
